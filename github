…or create a new repository on the command line
echo "# smthg" >> README.md / touch README.md 
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/DimaDennys/LASP.git
git push -u origin master
                
…or push an existing repository from the command line
git remote add origin https://github.com/DimaDennys/LASP.git
git push -u origin master

Create a new branch
git branch name_of_new_branch
git checkout name_of_branch_to_switch
git branch -a // or --all List both remote-tracking branches and local branches.

// AFTER MOMMIT PUSH BRANCH TO REMOTE
git push -u origin local_branch //-u, --set-upstream Upstream branche  (also called the remote tracking branch)
           For every branch that is up to date or successfully pushed, add upstream (tracking)
           reference, used by argument-less git-pull(1) and other commands. For more information, see
           branch.<name>.merge in git-config(1).

git branch -a //git branch -r to see the "remote branches".
git pull // in case the remote repo has been changed
git push //push changes

//MERGE A BRANCH WITH MASTER
git checkout master
git pull origin master // will pull changes from the origin remote to master branch and merge them to the local checked-out branch.
git branch --merged
git merge local_branch_to_merge //the merge using fast-forward
git merge -no-ff local_to_merge // like github does , keep tips visible
git push origin master

//Why is git so confusing? So we have 4 repositories totally, correct? 
//There is a (1) remote repository, 
//(2) a local repository, 
//(3) a staging repository, 
//(4) a local-remote aka origin/master? 
//Why would git have #4 repository at all?


